{"version":3,"file":"js/224.ef68e442.js","mappings":"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","sources":["webpack://project-myhome/./src/components/mixins/modalOpt.js","webpack://project-myhome/./src/views/Board/Includes/BoardViewPage.vue","webpack://project-myhome/./src/views/Board/Includes/BoardView.vue","webpack://project-myhome/./src/views/Board/Includes/BoardView.vue?4ffd","webpack://project-myhome/./src/views/Board/Includes/BoardViewBtn.vue","webpack://project-myhome/./src/views/Board/Includes/BoardViewBtn.vue?f354","webpack://project-myhome/./src/views/Board/Includes/BoardViewPage.vue?dd0f"],"sourcesContent":["import Modal from '@/components/modalPopup/index'\nconst ModalOption = {\n  name: 'modalOpt',\n  data () {\n    return {\n      isShowModal: false\n    }\n  },\n  components: {\n    Modal\n  },\n  mounted () {\n    console.log('a')\n  },\n  methods: {\n    close () {\n      this.isShowModal = false\n    },\n    callModal (a) {\n      this.isShowModal = true\n      this.modalType = a\n    }\n  }\n}\n\nexport default ModalOption\n","<template>\n  <div>\n    <section class=\"sub_wrap\">\n      <div class=\"boardViewTop\">\n        <h4>게시물 보기</h4>\n        <ul v-if=\"allData\" class=\"listD\">\n          <li>\n            <button @click=\"callModal('fix')\" class=\"button primary small\" type=\"button\">수정</button>\n          </li>\n          <li>\n            <button @click=\"callModal('del')\" class=\"button small\" type=\"button\">삭제</button>\n          </li>\n        </ul>\n      </div>\n      <div>\n        <BoardView :boardInfo=\"allData\"></BoardView>\n        <BoardViewBtn\n            @getList=\"fnGoList()\" @getPrev=\"fnPrev()\" @getNext=\"fnNext()\"\n            :boardPrev=\"disablePrev\" :boardNext=\"disableNext\"\n        ></BoardViewBtn>\n      </div>\n      <!-- 모달레이어 -->\n      <Modal\n          v-if=\"isShowModal\"\n          :title=\"pageTit\"\n          @close=\"close\"\n      >\n        <template #body>\n          <form action=\"\">\n            <input v-model=\"inpPassword\" autocomplete=\"off\" maxlength=\"6\" placeholder=\"암호를 입력하세요.(4~6글자)\" type=\"password\">\n          </form>\n        </template>\n        <template #footer>\n          <button\n              :class=\"!passwordEntered\n                ? 'disabled'\n                : ''\n              \"\n              @click=\"sendSubmit()\"\n              class=\"button primary\"\n              type=\"button\"\n          >확인</button>\n        </template>\n      </Modal>\n      <!-- 모달레이어 -->\n    </section>\n  </div>\n</template>\n\n<style scoped>\n.boardViewTop {\n  display: flex;\n  align-items: center;\n  margin-bottom: 1em;\n}\n.boardViewTop > h4 {\n  margin: 0;\n}\n.listD {\n  display: flex;\n  gap: 0.2em;\n  margin-left: auto;\n  list-style: none;\n  padding: 0;\n  margin-bottom: 0;\n}\n</style>\n\n<script>\nimport ModalOption from '@/components/mixins/modalOpt'\nimport BoardView from './BoardView'\nimport BoardViewBtn from './BoardViewBtn'\n\nexport default {\n  mixins: [ModalOption],\n  components: {\n    BoardView,\n    BoardViewBtn\n  },\n  data () {\n    return {\n      pageTit: 'boardViews',\n      idx: '',\n      resAll: '',\n      allData: '',\n      type: '',\n      title: '',\n      password: '',\n      author: '',\n      imageUrl: '',\n      contents: '',\n      routeIdx: Number,\n      created_at: '',\n      lists: [], // 변경: 배열로 초기화\n      disablePrev: false,\n      disableNext: false,\n      inpPassword: '',\n      allSpecial: /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/g,\n      passwordEntered: false,\n      testItem: '',\n      modalType: ''\n    }\n  },\n  created () {\n    this.getFnList() // 변경: 리스트 데이터를 가져오는 함수 호출\n  },\n  computed: {\n    requestBody () {\n      return this.$route.query\n    },\n    listLength () {\n      return this.lists.length\n    }\n  },\n  watch: {\n    lists: {\n      deep: true,\n      immediate: true,\n      handler (val) {\n        console.log('listLengthOnWatch', val)\n        // 변경: lists에 대한 변경 감지 후 로직 수행\n        this.getFirstLast()\n      }\n    },\n    $route: {\n      handler (val) {\n        console.log('route.query', val.query)\n        this.routeIdx = val.query.idx\n      },\n      deep: true,\n      immediate: true\n    },\n    inpPassword: {\n      handler (v) {\n        console.log(v)\n        console.log('passwordEntered', this.passwordEntered)\n        if (this.allSpecial.test(v)) {\n          console.log('암호에 특수문자 입력됨')\n          alert('암호에는 특수문자를 사용할 수 없습니다.')\n          this.inpPassword = v.substring(0, v.length - 1)\n        }\n        this.pwEnter(v)\n        console.log('password chk1', v, this.password)\n        console.log('password chk2', this.inpPassword, this.password)\n      },\n      deep: true,\n      immediate: true\n    },\n    password: {\n      handler (e) {\n        console.log('password__watcher', e)\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  beforeDestroy() {\n    this.passwordEntered = false\n  },\n  mounted () {\n    this.fnGetView()\n    this.getFirstLast()\n    console.log('this.listLength = this.lists.length_____', Number(this.lists.length))\n    console.log('this.lists', this.lists)\n    console.log('this.$data', this)\n    console.log('listLength....', this.listLength)\n  },\n  methods: {\n    getFirstLast () {\n      console.log('methodsItem', this, this.lists, this.listLength)\n      console.log('Number(this.routeIdx),this.listLength', Number(this.routeIdx), this.listLength)\n      if (Number(this.routeIdx) === this.listLength) {\n        this.disableNext = true\n      } else if (this.routeIdx === Number(1)) {\n        this.disablePrev = true\n      }\n      console.log('disablePrev, disableNext', this.disablePrev, this.disableNext)\n    },\n    async fnGetView () {\n      try {\n        const res = await this.$axios.get(this.$serverUrl + 'board/' + this.routeIdx, {\n          params: this.requestBody\n        })\n        console.log('res', res)\n        this.resAll = res\n        this.allData = res.data\n        this.imageUrl = res.data.file_url\n        this.password = res.data.password\n        this.type = res.data.type\n        this.title = res.data.title\n        this.author = res.data.author\n        this.contents = res.data.contents\n        this.created_at = res.data.created_at\n        console.log('res데이터 수신완료', res.data)\n        this.pwEnter(this.inpPassword)\n      } catch (err) {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      }\n    },\n    async getFnList () {\n      try {\n        const res = await this.requestData()\n        this.lists = res\n        console.log('getFnListInfo_res', res)\n      } catch (err) {\n        if (err.message.indexOf('Network Error') > -1) {\n          alert('네트워크가 원활하지 않습니다.\\n잠시 후 다시 시도해주세요.')\n        }\n      }\n    },\n    requestData () {\n      return this.$axios.get(this.$serverUrl + 'board/list', {\n        params: this.requestBody,\n        headers: {}\n      }).then((res) => res.data)\n    },\n    fnUpdate () {\n      this.$router.push({\n        path: './BoardWrite',\n        query: this.requestBody\n      })\n    },\n    sendSubmit () {\n      if (this.modalType === 'fix') {\n        this.fnUpdate()\n      } else if (this.modalType === 'del') {\n        this.fnDelete()\n      }\n    },\n    fnDelete () {\n      if (!confirm('삭제하시겠습니까?')) return\n\n      this.$axios.delete(this.$serverUrl + 'board/' + this.idx, {})\n        .then(() => {\n          alert('삭제되었습니다.')\n          this.getFnList()\n        }).catch((err) => {\n          console.log(err)\n        })\n    },\n    fnPrev () {\n      console.log('route', this.$route.query)\n      console.log('this.routeIdx - 1', `${this.routeIdx--}`)\n      this.$router.push({ path: 'boardView', query: { idx: `${this.routeIdx--}` } }).catch(() => {})\n    },\n    fnNext () {\n      console.log('route', this.$route.query)\n      console.log('this.routeIdx + 1', `${this.routeIdx++}`)\n      this.$router.push({ path: 'boardView', query: { idx: `${this.routeIdx++}` } }).catch(() => {})\n    },\n    fnGoList () {\n      this.$router.push({ path: 'boardList' })\n    },\n    pwEnter (v) {\n      this.passwordEntered = this.password === this.inpPassword\n    }\n  }\n}\n</script>\n","<template>\n  <div>\n      <h3><span>{{ $props.boardInfo.type }}</span>{{ $props.boardInfo.title }}</h3>\n      <p>{{ $props.boardInfo.author }} | {{ $props.boardInfo.created_at }}</p>\n\n      <div class=\"box textField01\">\n        <p\n          v-if=\"$props.boardInfo && $props.boardInfo.file_url\"\n          class=\"boardImgBox\"\n        >\n          <img\n              class=\"imgContent\"\n              :src=\"'https://github.com/bassistjune/springboot-back/blob/ab44124efb07412caf6b9aa06747509671835c5e/src/main/resources/static/upload/ssg_landers.jpeg'+`${boardInfo.file_url}`+'?raw=true'\"\n              alt=\"게시판 이미지\">\n        </p>\n<!--        <p-->\n<!--            v-if=\"$props.boardInfo && $props.boardInfo.file_url\"-->\n<!--            class=\"boardImgBox\"-->\n<!--        >-->\n<!--          <img-->\n<!--              class=\"imgContent\"-->\n<!--              :src=\"'https://my-vue-project-f316fbe23105.herokuapp.com/'+`${boardInfo.file_url}`\"-->\n<!--              alt=\"게시판 이미지\">-->\n<!--        </p>-->\n        <p>\n          {{ $props.boardInfo.contents }}\n        </p>\n      </div>\n  </div>\n</template>\n\n<style scoped>\n  .textField01 {min-height: 10em;}\n  img.imgContent {max-width: 50%;}\n</style>\n\n<script>\nexport default {\n  props: ['boardInfo']\n}\n</script>\n","import { render } from \"./BoardView.vue?vue&type=template&id=710d7927&scoped=true\"\nimport script from \"./BoardView.vue?vue&type=script&lang=js\"\nexport * from \"./BoardView.vue?vue&type=script&lang=js\"\n\nimport \"./BoardView.vue?vue&type=style&index=0&id=710d7927&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-710d7927\"]])\n\nexport default __exports__","<template>\n  <div class=\"wideFlex01\">\n    <a\n      :class=\"\n        $props.boardPrev === true\n          ? 'disable'\n          : ''\"\n      href=\"javascript:void(0);\" @click=\"goPrev()\" class=\"button\">이전</a>\n    <a href=\"javascript:void(0);\" @click=\"goList()\" class=\"button\">목록으로</a>\n    <a\n        :class=\"\n        $props.boardNext === true\n          ? 'disable'\n          : ''\"\n      href=\"javascript:void(0);\" @click=\"goNext()\" class=\"button\">다음</a>\n  </div>\n</template>\n\n<style scoped>\n  .wideFlex01 {display: flex; justify-content: center;}\n  .wideFlex01 > a {margin: 0 1em;}\n  .disable {\n    box-shadow: inset 0 0 0 2px #eeeeee !important;\n    color: #eeeeee !important;\n    pointer-events: none !important;\n  }\n</style>\n<script>\nexport default {\n  props: ['boardPrev', 'boardNext'],\n  methods: {\n    goList () {\n      this.$emit('getList')\n    },\n    goPrev () {\n      this.$emit('getPrev')\n    },\n    goNext () {\n      this.$emit('getNext')\n    }\n  }\n}\n</script>\n","import { render } from \"./BoardViewBtn.vue?vue&type=template&id=6a49bdd3&scoped=true\"\nimport script from \"./BoardViewBtn.vue?vue&type=script&lang=js\"\nexport * from \"./BoardViewBtn.vue?vue&type=script&lang=js\"\n\nimport \"./BoardViewBtn.vue?vue&type=style&index=0&id=6a49bdd3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6a49bdd3\"]])\n\nexport default __exports__","import { render } from \"./BoardViewPage.vue?vue&type=template&id=426d080c&scoped=true\"\nimport script from \"./BoardViewPage.vue?vue&type=script&lang=js\"\nexport * from \"./BoardViewPage.vue?vue&type=script&lang=js\"\n\nimport \"./BoardViewPage.vue?vue&type=style&index=0&id=426d080c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-426d080c\"]])\n\nexport default __exports__"],"names":["ModalOption","name","data","isShowModal","components","Modal","mounted","methods","close","this","callModal","a","modalType","class","_createElementVNode","action","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","$data","allData","_hoisted_4","onClick","_cache","$event","_ctx","type","_createVNode","_component_BoardView","boardInfo","_component_BoardViewBtn","onGetList","$options","fnGoList","onGetPrev","fnPrev","onGetNext","fnNext","boardPrev","disablePrev","boardNext","disableNext","_createBlock","_component_Modal","title","pageTit","onClose","body","_withCtx","_hoisted_5","inpPassword","autocomplete","maxlength","placeholder","footer","_normalizeClass","passwordEntered","sendSubmit","_toDisplayString","$props","author","created_at","file_url","src","alt","contents","props","__exports__","href","goPrev","goList","goNext","$emit","mixins","BoardView","BoardViewBtn","idx","resAll","password","imageUrl","routeIdx","Number","lists","allSpecial","testItem","created","getFnList","computed","requestBody","$route","query","listLength","length","watch","deep","immediate","handler","val","getFirstLast","v","test","alert","substring","pwEnter","e","beforeDestroy","fnGetView","async","res","$axios","get","$serverUrl","params","err","message","indexOf","requestData","headers","then","fnUpdate","$router","push","path","fnDelete","confirm","delete","catch","render"],"sourceRoot":""}